readlink -f $(which java) | sed s:bin/java::    == Получить $JAVA_HOME
find / -name file*.file                         == Найти файл по имени
:%s/^#.*$//g                                    == удаляет комментарии
:%s/\n\{2,}/\r/g                                == удаляет пустые строки
"{{ groups['YOU_GROUPS'] | join(', ') }}"       == Перебор всех хостов в группе Ansible. Join разделяет хосты точкой с пробелом
du -ah / | sort -rh | head -n 10                == Вывод 10 самых больших файлов в ФС

CREATE USER 'username'@'%' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON *.* TO 'username'@'%';
FLUSH PRIVILEGES;                                      == Создание пользователя MySQL

SELECT table_schema AS "Database", 
ROUND(SUM(data_length + index_length) / 1024 / 1024, 2) AS "Size (MB)"
FROM information_schema.tables 
GROUP BY table_schema;                          == Вес БД в МБ


ansible-vault encrypt_string 'password' --name 'var_name'     == создание хеша vault
grep -rnw / -e "СТРОКА ПОИСКА"                 == Поиск во всех файлах по строке


mysqldump -u USER -p -R -v "ИМЯ БАЗЫ ДАННЫХ" > "ИМЯ БАЗЫ ДАННЫХ".sql; gzip "ИМЯ БАЗЫ ДАННЫХ".sql     == Дамп mysql базы. -R с процедурами и триггерами
gzip -d "ИМЯ БАЗЫ ДАННЫХ".sql                   == Распаковать gz архив
mysql -u USER -p -v "ИМЯ БАЗЫ ДАННЫХ" < "ИМЯ БАЗЫ ДАННЫХ".sql   == Вернуть дамп MySQL


truncate -s 0 /var/lib/docker/containers/*/*-json.log удалить содержимое файла, без удаления самого файла
